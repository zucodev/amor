buildscript {
    ext {
        jansiVersion = project.jansiVersion
        gradleCoberturaVersion = project.gradleCoberturaVersion
        gradleDockerVersion = project.gradleDockerVersion
        grailsVersion = project.grailsVersion
        gormVersion = project.gormVersion
        assetPipelineVersion = project.assetPipelineVersion
        postgresqlVersion = project.postgresqlVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.fusesource.jansi:jansi:$jansiVersion"
        classpath "net.saliman:gradle-cobertura-plugin:$gradleCoberturaVersion"
        classpath "com.bmuschko:gradle-docker-plugin:$gradleDockerVersion"
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion - '.RELEASE'}"

        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:$assetPipelineVersion"
        classpath "org.postgresql:postgresql:$postgresqlVersion"
    }
}

plugins {
    id 'nu.studer.jooq' version '2.0.5'
    id 'agorapulse.plugins.asset-pipeline-cdn' version '0.1.3'
    id "org.flywaydb.flyway" version "4.2.0"
}

version '0.1'
group 'ru.melodrom.amor'

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'org.grails.grails-web'
apply plugin: 'org.grails.grails-gsp'
apply plugin: 'com.bertramlabs.asset-pipeline'
apply plugin: 'net.saliman.cobertura'

apply from: "${project.rootDir}/gradle/ext.gradle"
apply from: "${project.rootDir}/gradle/config.gradle"

ext {
    // Resolves "CreateProcess error=206, The filename or extension is too long"
    grails {
        pathingJar = true
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

springBoot {
    mainClass = 'ru.melodrom.amor.Application'
}

compileGroovy {
    source = source.filter { File file ->
        !file.path.contains('/front-end/') && !file.path.contains('\\front-end\\')
    }
    classpath = classpath.filter { File file ->
        !file.path.contains('/front-end/') && !file.path.contains('\\front-end\\')
    }
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    // Grails
    compile 'org.springframework.boot:spring-boot-starter-logging'
    compile 'org.springframework.boot:spring-boot-autoconfigure'
    compile 'org.grails:grails-core'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-tomcat'
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile("org.springframework:spring-messaging")
    compile 'org.grails:grails-dependencies'
    compile "org.grails:grails-web-boot"
    console 'org.grails:grails-console'
    profile 'org.grails.profiles:web'
    testCompile 'org.grails:grails-plugin-testing'
    testCompile 'org.grails.plugins:geb'
    testRuntime 'org.seleniumhq.selenium:selenium-htmlunit-driver:2.52.0'
    testRuntime 'net.sourceforge.htmlunit:htmlunit:2.25'

    compile "org.grails:grails-datastore-rest-client:$gormVersion"
    testCompile "org.grails:grails-datastore-gorm-test:$gormVersion"

    // Spring Boot
    compile 'org.springframework.boot:spring-boot-starter-jooq', {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-data-jpa'
        exclude group: 'org.jooq', module: 'jooq'
    }
    compile 'org.springframework.boot:spring-boot-starter-redis'
    compile 'org.springframework.session:spring-session'

    // plugins
    compile 'org.grails.plugins:hibernate5'
    compile 'org.grails.plugins:grails-java8'
    compile 'org.grails.plugins:postgresql-extensions:5.0.0'
    compile("org.grails.plugins:spring-security-core:$springSecurityCorePluginVersion") {
        exclude group: 'net.sf.ehcache', module: 'ehcache'
    }
    compile "org.grails.plugins:newrelic:$newrelicPluginVersion"
    compile "org.grails.plugins:quartz:$quartzPluginVersion"
    compile "org.grails.plugins:dropwizard-metrics:1.0.0.BUILD-SNAPSHOT"
    compile 'org.grails.plugins:cache:3.0.3'
    compile 'org.grails.plugins:cookie:2.0.5'
    compile 'org.grails.plugins:mail:2.0.0.RC6'

    testCompile 'org.grails.plugins:build-test-data:3.0.1'

    runtime 'org.grails.plugins:grails-console:2.0.8'
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:$assetPipelineVersion"

    assets "com.bertramlabs.plugins:sass-asset-pipeline:$assetPipelineVersion"
    assets "com.bertramlabs.plugins:jsx-asset-pipeline:$assetPipelineVersion"


    // libraries
    compile "org.hibernate:hibernate-core:$hibernateVersion"
    compile "org.hibernate:hibernate-ehcache:$hibernateVersion"
    compile "org.hibernate:hibernate-java8:$hibernateVersion"
    compile "net.logstash.logback:logstash-logback-encoder:$logstashLogbackEncoderVersion"
    compile "org.jooq:jooq:$jooqVersion"
    compile "org.postgresql:postgresql:$postgresqlVersion"
    compile "com.zaxxer:HikariCP:$hikariCpVersion"
    compile "org.jsoup:jsoup:$jsoupVersion"
    compile 'org.coursera:dropwizard-metrics-datadog:1.1.10'
    compile 'com.mixpanel:mixpanel-java:1.4.4'
    compile 'com.github.snowindy:scriptlet4docx:0.8.6'
    compile 'org.apache.poi:poi:3.16'
    compile 'org.apache.poi:poi-ooxml:3.16'
    compile 'org.apache.poi:poi-ooxml-schemas:3.16'
    compile 'org.apache.poi:ooxml-schemas:1.3'

    compile 'org.jodconverter:jodconverter-local:4.1.0'

    testRuntime "org.postgresql:postgresql:$postgresqlVersion"

    // JOOQ
    jooqRuntime "org.postgresql:postgresql:$postgresqlVersion"
    jooqRuntime "org.jooq:jooq:$jooqVersion"
    jooqRuntime "org.jooq:jooq-meta:$jooqVersion"
    jooqRuntime "org.jooq:jooq-codegen:$jooqVersion"

    // webjars
    provided 'org.webjars:fluxxor:1.6.0'
}

apply from: "${project.rootDir}/gradle/common.gradle"
apply from: "${project.rootDir}/gradle/flyway.gradle"

